{"version":3,"sources":["components/handler.jsx"],"names":[],"mappings":";;;;;;;;;AAAA;;;;AACA;;AACA;;;;;;;;;;AAEA,IAAI,cAAc,OAAO,aAAP,CAAlB;AACA,IAAI,cAAc,OAAO,aAAP,CAAlB;;IAEqB,O;;;AACnB,mBAAY,KAAZ,EAAmB;AAAA;;AAAA,2FACX,KADW;;AAGjB,UAAK,KAAL,GAAa;AACX,SAAG,IADQ;AAEX,SAAG;AAFQ,KAAb;AAHiB;AAOlB;;;;qCAEgB;AAAA;;AACf,UAAI,IAAI,KAAK,KAAL,CAAW,CAAnB;AACA,UAAG,KAAK,IAAR,EAAc;AACZ,aAAK,QAAL,CAAc,EAAE,GAAG,IAAL,EAAW,GAAG,IAAd,EAAd,EAAoC,YAAM;AACxC,iBAAK,KAAL,CAAW,OAAX,CAAmB,CAAnB;AACD,SAFD;AAGD;AACF;;;wCAEmB,C,EAAG;AAAA;;AACrB,UAAI,IAAI,EAAE,CAAV;AACA,UAAI,SAAS,KAAK,KAAL,CAAW,MAAxB;AACA,UAAG,EAAE,CAAF,GAAM,OAAO,GAAP,CAAW,CAApB,EAAuB,IAAI,OAAO,GAAP,CAAW,CAAf;AACvB,UAAG,EAAE,CAAF,GAAM,OAAO,GAAP,CAAW,CAApB,EAAuB,IAAI,OAAO,GAAP,CAAW,CAAf;;AAEvB,WAAK,QAAL,CAAc,EAAE,GAAG,CAAL,EAAQ,GAAG,CAAX,EAAd,EAA8B,YAAM;AAClC,eAAK,KAAL,CAAW,MAAX,CAAkB,CAAlB;AACD,OAFD;AAGD;;;6BAkBQ;AACP,aACE,mDAAQ,IAAI,KAAK,CAAjB;AACE,YAAG,GADL;AAEE,WAAG,KAAK,CAFV;AAGE,mBAAW,IAHb;AAIE,gBAAQ,KAAK,mBAAL,CAAyB,IAAzB,CAA8B,IAA9B,CAJV;AAKE,mBAAW,KAAK,cAAL,CAAoB,IAApB,CAAyB,IAAzB,CALb;AAME,mBAAU,gCANZ;AAOE,eAAO,EAAC,QAAQ,SAAT,EAPT,GADF;AAUD;;;wBA3BO;AACN,UAAG,KAAK,KAAL,CAAW,CAAX,KAAiB,IAApB,EAA0B;AACxB,eAAO,KAAK,KAAL,CAAW,CAAlB;AACD,OAFD,MAEO;AACL,eAAO,KAAK,KAAL,CAAW,UAAX,CAAsB,CAA7B;AACD;AACF;;;wBAEO;AACN,UAAG,KAAK,KAAL,CAAW,CAAX,KAAiB,IAApB,EAA0B;AACxB,eAAO,KAAK,KAAL,CAAW,CAAlB;AACD,OAFD,MAEO;AACL,eAAO,CAAP;AACD;AACF;;;;EA5CkC,gBAAM,S;;kBAAtB,O;QA4DZ,W,GAAA,W;QAAa,W,GAAA,W","file":"handler.js","sourcesContent":["import React from 'react';\nimport { TickCollectionUtils } from './tick_collection';\nimport { Circle } from './react_svg';\n\nvar HANDLER_ONE = String(\"HANDLER_ONE\");\nvar HANDLER_TWO = String(\"HANDLER_TWO\");\n\nexport default class Handler extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      x: null,\n      r: null\n    }\n  }\n\n  handlerDragged() {\n    let x = this.state.x;\n    if(x != null) {\n      this.setState({ x: null, r: null }, () => {\n        this.props.dragged(x);\n      });\n    }\n  }\n\n  handlerBeingDragged(e) {\n    let x = e.x;\n    let limits = this.props.limits;\n    if(e.x < limits.min.x) x = limits.min.x;\n    if(e.x > limits.max.x) x = limits.max.x;\n\n    this.setState({ x: x, r: 8 }, () => {\n      this.props.onDrag(x);\n    });\n  }\n\n  get x() {\n    if(this.state.x !== null) {\n      return this.state.x;\n    } else {\n      return this.props.activeTick.x;\n    }\n  }\n\n  get r() {\n    if(this.state.r !== null) {\n      return this.state.r;\n    } else {\n      return 6;\n    }\n  }\n\n  render() {\n    return (\n      <Circle cx={this.x}\n        cy=\"0\"\n        r={this.r}\n        draggable={true}\n        onDrag={this.handlerBeingDragged.bind(this)}\n        onDragEnd={this.handlerDragged.bind(this)}\n        className=\"react-timeline-slider__handler\"\n        style={{cursor: 'pointer'}} />\n    );\n  }\n}\n\nexport { HANDLER_ONE, HANDLER_TWO };\n"]}